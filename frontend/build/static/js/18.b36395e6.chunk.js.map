{"version":3,"sources":["../node_modules/@material-ui/core/esm/Link/Link.js","components/Page.js","views/auth/RegisterView.js"],"names":["Link","React","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","Page","forwardRef","children","title","rest","propTypes","PropTypes","node","isRequired","string","useStyles","makeStyles","theme","height","paddingBottom","spacing","paddingTop","RegisterView","navigate","useNavigate","dispatch","useDispatch","appState","useSelector","state","app","user","formErrors","useRef","formValues","passwordRegex","RegExp","emailRegex","alert","show","Toast","message","hideAlert","registered","errorRules","newEmail","required","remoteValidate","url","window","restAppConfig","api","regex","errorMessages","newUserName","newPassword","passwordConfirm","compareWith","validate","values","a","errors","value","current","test","display","justifyContent","maxWidth","initialValues","onSubmit","org","register","handleBlur","handleChange","handleSubmit","touched","isSubmitting","mb","gutterBottom","error","Boolean","fullWidth","helperText","label","onChange","type","my","size","RouterLink","to"],"mappings":"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","file":"static/js/18.b36395e6.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({ children, title = '', ...rest }, ref) => (\n  <div ref={ref} {...rest}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </div>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","import React, { useRef } from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Container,\n  Link,\n  TextField,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Page from \"../../components/Page\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register, hideAlert } from \"../../actions\";\nimport Toast from \"../../modules/toast\";\nimport {  remoteValidate } from \"../../modules/helpers\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const appState = useSelector((state) => state.app);\n  const user = useSelector((state) => state.user);\n  const formErrors = useRef({});\n  const formValues = useRef({});\n\n  const passwordRegex = new RegExp(\n    \"^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{5,})\"\n  );\n  const emailRegex = new RegExp(\n    \"^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$\"\n  );\n  if (appState.alert.show) {\n    Toast({ message: appState.alert.message });\n    dispatch(hideAlert());\n\n    if (user.registered) navigate(\"/login\");\n  }\n\n  \n\n  const errorRules = {\n    newEmail: {\n      required: true,\n      remoteValidate: true,\n      url: `${window.restAppConfig.api}user/validate?email`,\n      regex: emailRegex,\n      errorMessages: {\n        required: \"Email is Required\",\n        remoteValidate: \"Email already Taken\",\n        regex: \"Enter a valid email\",\n      },\n    },\n    newUserName: {\n      required: true,\n      remoteValidate: true,\n      url: `${window.restAppConfig.api}user/validate?username`,\n      errorMessages: {\n        required: \"Username is Required\",\n        remoteValidate: \"Username already Taken\",\n      },\n    },\n    newPassword: {\n      required: true,\n      regex: passwordRegex,\n      errorMessages: {\n        required: \"Password is Required\",\n        regex:\n          \"Password should contain at least 1 numeric,special character and be of atleast 5 characters\",\n      },\n    },\n    passwordConfirm: {\n      required: true,\n      compareWith: \"newPassword\",\n      errorMessages: {\n        required: \"Please confirm the password\",\n        compareWith: \"Password doesn't match\",\n      },\n    },\n    name: {\n      required: true,\n      errorMessages: { required: \"Org name is Required\" },\n    },\n  };\n  const validate = async (values) => {\n    const errors = {};\n    for (let value in values) {\n      if (errorRules[value].required && !values[value]) {\n        errors[value] = errorRules[value][\"errorMessages\"][\"required\"];\n      }\n      if (errorRules[value].remoteValidate) {\n        if (\n          formValues.current[value] !== values[value] ||\n          formErrors.current[value]\n        ) {\n          const result = await remoteValidate(\n            `${errorRules[value].url}=${values[value]}`\n          );\n          if (!result)\n            errors[value] =\n              errorRules[value][\"errorMessages\"][\"remoteValidate\"];\n        }\n      }\n      if (errorRules[value].regex) {\n        if (!errorRules[value].regex.test(values[value]))\n          errors[value] = errorRules[value][\"errorMessages\"][\"regex\"];\n      }\n      if (errorRules[value].compareWith) {\n        if (values[value] !== values[errorRules[value][\"compareWith\"]])\n          errors[value] = errorRules[value][\"errorMessages\"][\"compareWith\"];\n      }\n    }\n\n    formErrors.current = errors;\n    formValues.current = values;\n    return errors;\n  };\n  return (\n    <Page className={classes.root} title=\"Register\">\n      <Box display=\"flex\" height=\"100%\" justifyContent=\"center\">\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              newEmail: \"\",\n              name: \"\",\n              newUserName: \"\",\n              newPassword: \"\",\n              passwordConfirm: \"\",\n            }}\n            validate={validate}\n            onSubmit={(values) => {\n              values.org = true;\n              dispatch(register(values));\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Fill in details to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.name && errors.name)}\n                  fullWidth\n                  helperText={touched.name && errors.name}\n                  label=\"Org name\"\n                  margin=\"normal\"\n                  name=\"name\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.name}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.newEmail && errors.newEmail)}\n                  fullWidth\n                  helperText={touched.newEmail && errors.newEmail}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"newEmail\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.newEmail}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.newUserName && errors.newUserName)}\n                  fullWidth\n                  helperText={touched.newUserName && errors.newUserName}\n                  label=\"Username\"\n                  margin=\"normal\"\n                  name=\"newUserName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.newUserName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.newPassword && errors.newPassword)}\n                  fullWidth\n                  helperText={touched.newPassword && errors.newPassword}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"newPassword\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.newPassword}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(\n                    touched.passwordConfirm && errors.passwordConfirm\n                  )}\n                  fullWidth\n                  helperText={touched.passwordConfirm && errors.passwordConfirm}\n                  label=\"Confirm Password\"\n                  margin=\"normal\"\n                  name=\"passwordConfirm\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.passwordConfirm}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography color=\"textSecondary\" variant=\"body1\">\n                  Have an account?\n                  <Link component={RouterLink} to=\"/login\" variant=\"h6\">\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n"],"sourceRoot":""}