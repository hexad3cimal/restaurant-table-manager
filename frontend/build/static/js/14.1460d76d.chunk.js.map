{"version":3,"sources":["../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","components/Page.js","../node_modules/react-feather/dist/icons/search.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","views/Table/AddTable.js","views/Table/TableCard.js","views/Table/TableList.js","views/Table/index.js"],"names":["InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","value","_extends","clsx","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","Page","forwardRef","title","rest","propTypes","PropTypes","node","isRequired","string","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Search","_ref","_ref$color","_ref$size","size","createElement","xmlns","width","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","oneOfType","number","displayName","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","validate","uuid","REGEX","test","byteToHex","push","toString","substr","stringify","arr","offset","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","AddTable","dispatch","useDispatch","branchState","useSelector","state","branch","tableState","table","user","selectedTable","branches","formErrors","useRef","formValues","newPassword","passwordRegex","RegExp","useState","id","userName","branchId","branchName","password","passwordConfirm","setTable","useEffect","selectedBranch","split","join","getBranches","errorRules","newUserName","required","remoteValidate","url","window","restAppConfig","api","errorMessages","current","regex","compareWith","values","a","errors","Card","CardContent","enableReinitialize","initialValues","edit","onSubmit","formik","reduce","branchNameArray","addTable","setSubmitting","handleBlur","handleChange","handleSubmit","isSubmitting","touched","CardHeader","Divider","Grid","container","spacing","item","md","xs","TextField","error","Boolean","fullWidth","helperText","label","onBlur","onChange","type","select","SelectProps","native","InputLabelProps","shrink","map","Box","justifyContent","p","Button","onClick","initiateTableAdd","setSelectedTable","disabled","useStyles","makeStyles","theme","flexDirection","statsItem","statsIcon","occupied","backgroundColor","colors","red","main","TableCard","navigate","useNavigate","selectedTableFromState","add","align","gutterBottom","flexGrow","justify","loginCode","replace","onEdit","tableClone","uuidv4","editTable","generateNewCode","deleteTable","onDelete","minHeight","paddingBottom","paddingTop","tableCard","TableList","tables","filteredTables","setTables","Container","maxWidth","mt","InputProps","startAdornment","SvgIcon","fontSize","placeholder","event","filter","includes","lg","TableView","appState","app","alert","show","Toast","message","hideAlert","new","getTables","style"],"mappings":"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","file":"static/js/14.1460d76d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({ children, title = '', ...rest }, ref) => (\n  <div ref={ref} {...rest}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </div>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n};\n\nexport default Page;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Search = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"11\",\n    cy: \"11\",\n    r: \"8\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    y1: \"21\",\n    x2: \"16.65\",\n    y2: \"16.65\"\n  }));\n});\nSearch.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nSearch.displayName = 'Search';\nexport default Search;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getBranches, addTable, initiateTableAdd, selectedTable as setSelectedTable } from \"../../actions\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n} from \"@material-ui/core\";\n\nimport { Formik } from \"formik\";\nimport { remoteValidate } from \"../../modules/helpers\";\n\n\nconst AddTable = () => {\n  const dispatch = useDispatch();\n  const branchState = useSelector((state) => state.branch);\n  const tableState = useSelector((state) => state.table);\n  const user = useSelector(state => state.user) || {}\n\n  const selectedTable = (tableState && tableState.selectedTable) || {};\n  const branches = (branchState && branchState.branches) || [];\n  const formErrors = useRef({});\n  const formValues = useRef({newPassword:''});\n  const passwordRegex = new RegExp(\n    \"^(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{5,})\"\n  );\n\n  \n  const [table, setTable] = useState({\n    id:'',\n    name: \"\",\n    userName: \"\",\n    branchId: \"\",\n    branchName: \"\",\n    password: \"\",\n    passwordConfirm:''\n  });\n\n  useEffect(()=>{\n    if(!branchState.selectedBranch){\n      setTable({...table ,userName:user.user.name.split(\" \").join(\"\")+\"-table-\"})\n    }\n  },[user])\n\n  useEffect(() => {\n    selectedTable && setTable({ ...selectedTable });\n  }, [selectedTable]);\n\n  useEffect(() => {\n    dispatch(getBranches());\n  }, []);\n  const errorRules = {\n    newUserName: {\n      required: true,\n      remoteValidate: true,\n      url:`${window.restAppConfig.api}user/validate?username`,\n      errorMessages: {\n        required: \"Username is Required\",\n        remoteValidate: \"Username already Taken\",\n      },\n    },\n    newPassword: {\n      required: table.id ? (formValues.current.newPassword.length ? true: false): true,\n      regex: passwordRegex,\n      errorMessages: {\n        required: \"Password is Required\",\n        regex:\n          \"Password should contain at least 1 numeric,special character and be of atleast 5 characters\",\n      },\n    },\n    passwordConfirm: {\n      required: table.id ? (formValues.current.newPassword.length ? true: false): true,\n      compareWith: \"newPassword\",\n      errorMessages: {\n        required: \"Please confirm the password\",\n        compareWith: \"Password doesn't match\",\n      },\n    },\n    name: {\n      required: true,\n      errorMessages: { required: \"Full name is Required\" },\n    },\n    branchId: {\n      required: true,\n      errorMessages: { required: \"Please select a branch\" },\n    },\n  };\n\n\n  const back = ()=>{\n    dispatch(initiateTableAdd(false))\n    dispatch(setSelectedTable({}))\n  }\n  \n  const validate = async (values) => {\n    const errors = {};\n    for (let value in values) {\n      if(errorRules[value] && errorRules[value].required){\n        if (!values[value]) {\n          errors[value] = errorRules[value][\"errorMessages\"][\"required\"];\n        }\n        if (errorRules[value].remoteValidate) {\n          if (\n            formValues.current[value] !== values[value] ||\n            formErrors.current[value]\n          ) {\n            let url = `${errorRules[value].url}=${values[value]}`\n            if(table.id){\n              url = `${url}&id=${table.id}`\n            }\n            const result = await remoteValidate(\n              url\n            );\n            if (!result)\n              errors[value] =\n                errorRules[value][\"errorMessages\"][\"remoteValidate\"];\n          }\n        }\n        if (errorRules[value].regex) {\n          if (!errorRules[value].regex.test(values[value]))\n            errors[value] = errorRules[value][\"errorMessages\"][\"regex\"];\n        }\n        if (errorRules[value].compareWith) {\n          if (values[value] !== values[errorRules[value][\"compareWith\"]])\n            errors[value] = errorRules[value][\"errorMessages\"][\"compareWith\"];\n        }\n      }\n   \n    }\n\n    formErrors.current = errors;\n    formValues.current = {...formValues.current,values};\n    return errors;\n  };\n\n\n  return (\n    <Card>\n    <CardContent >\n    <Formik\n      enableReinitialize\n      initialValues={{\n        name: table.name,\n        newUserName: table.userName,\n        branchId: table.branchId,\n        branchName: table.branchName,\n        newPassword: table.password,\n        passwordConfirm:'',\n        edit: false,\n      }}\n     validate={validate}\n      onSubmit={(values, formik) => {\n        values.branchName = branches.reduce(function (branchNameArray, branch) {\n          if (branch.branchId === values.branchId) {\n            branchNameArray.push(branch.name);\n          }\n          return branchNameArray;\n        }, [])[0];\n        if (table.id) {\n          values.edit = true;\n          values.id = table.id;\n          dispatch(addTable(values));\n          return;\n        }\n        dispatch(addTable(values));\n        formik.setSubmitting(false);\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values,\n      }) => (\n        <form\n          onSubmit={handleSubmit}\n        >\n          <Card>\n            <CardHeader  title={table.id ? \"Edit table\" : \"Add table\"} />\n            <Divider />\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Table Name\"\n                    margin=\"normal\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.newUserName && errors.newUserName)}\n                    fullWidth\n                    helperText={touched.newUserName && errors.newUserName}\n                    label=\"Username\"\n                    margin=\"normal\"\n                    name=\"newUserName\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.newUserName}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(touched.newPassword && errors.newPassword)}\n                    fullWidth\n                    helperText={touched.newPassword && errors.newPassword}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"newPassword\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.newPassword}\n                    variant=\"outlined\"\n                    type=\"password\"\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password\"\n                    margin=\"normal\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                    type=\"password\"\n                  />\n                </Grid>\n                <Grid item md={4} xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Select Branch\"\n                    name=\"branchId\"\n                    margin=\"normal\"\n                    error={Boolean(touched.branchId && errors.branchId)}\n                    helperText={touched.branchId && errors.branchId}\n                    onChange={handleChange}\n                    required\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.branchId}\n                    variant=\"outlined\"\n                    InputLabelProps={{ shrink: values.branchId }}  \n                  >\n                    <option value=\"\"></option>\n                    {branches.map((branch) => (\n                      <option key={branch.branchId} value={branch.branchId}>\n                        {branch.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n              </Grid>\n            </CardContent>\n            <Divider />\n            <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\n            <Button color=\"secondary\"  onClick={()=> {back()}} type=\"button\" variant=\"contained\">\n                Go back\n              </Button>\n              <Button color=\"primary\" type=\"submit\" disabled={isSubmitting } variant=\"contained\">\n                {table.id ? 'Update Table': 'Add'}\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n    </CardContent>\n    </Card>\n  );\n};\n\nAddTable.propTypes = {\n  table: PropTypes.object,\n};\n\nexport default AddTable;\n","import React  from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedTable, editTable, deleteTable } from \"../../actions/\";\nimport { useNavigate } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Bounce } from \"react-awesome-reveal\";\nimport AddTable from \"./AddTable\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  statsItem: {\n    alignItems: \"center\",\n    display: \"flex\",\n  },\n  statsIcon: {\n    marginRight: theme.spacing(1),\n  },\n  occupied: {\n    backgroundColor: theme.colors.red.main,\n  },\n}));\n\nconst TableCard = ({ table }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const tableState = useSelector((state) => state.table);\n  const selectedTableFromState = (tableState && tableState.selectedTable) || {};\n  const onClick = (table) => {\n    dispatch(selectedTable(table));\n    navigate(\"/app/table-details\", { replace: true });\n  };\n  const onEdit = (table) => {\n    dispatch(selectedTable(table));\n  };\n  const onDelete = (table) => {\n    dispatch(deleteTable(table));\n  };\n  const generateNewCode = (table) => {\n    const tableClone = Object.assign({}, table);\n    tableClone.loginCode = uuidv4();\n    dispatch(editTable(tableClone));\n  };\n\n  return (\n    <Bounce>\n      {!selectedTableFromState.id && !tableState.add ? (\n        <Card\n          className={clsx(\n            classes.root,\n            table.occupied ? classes.occupied : null\n          )}\n        >\n          <CardContent>\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h4\"\n            >\n              {table.name}\n            </Typography>\n            <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n              {table.branchName}\n            </Typography>\n          </CardContent>\n          <Box flexGrow={1} />\n          <Divider />\n          <Box p={2}>\n            <Grid container justify=\"space-between\" spacing={2}>\n              <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n                Login code\n              </Typography>\n              <Typography align=\"center\" color=\"textPrimary\" variant=\"body1\">\n                {table.loginCode}\n              </Typography>\n            </Grid>\n          </Box>\n          <Divider />\n          <Box p={2}>\n            <Grid container justify=\"space-between\" spacing={2}>\n              <Button\n                onClick={() => {\n                  onClick(table);\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                View\n              </Button>\n              <Button\n                onClick={() => {\n                  onEdit(table);\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Edit\n              </Button>\n              <Button\n                onClick={() => {\n                  generateNewCode(table);\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Generate new code\n              </Button>\n              <Button\n                onClick={() => {\n                  onDelete(table);\n                }}\n                color=\"secondary\"\n                variant=\"contained\"\n              >\n                Delete\n              </Button>\n            </Grid>\n          </Box>\n        </Card>\n      ) : (\n        <AddTable />\n      )}\n    </Bounce>\n  );\n};\n\nTableCard.propTypes = {\n  table: PropTypes.object.isRequired,\n};\n\nexport default TableCard;\n","import React, { useEffect, useState } from 'react';\nimport { Box, Container, Grid, makeStyles,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon, } from '@material-ui/core';\n  import {  useDispatch } from 'react-redux';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Search as SearchIcon } from 'react-feather';\nimport Page from '../../components/Page';\nimport TableCard from './TableCard';\nimport { initiateTableAdd } from '../../actions';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n  tableCard: {\n    height: '100%',\n  },\n}));\n\nconst TableList = ({tables}) => {\n  const classes = useStyles();\n\n  const [filteredTables, setTables]= useState([])\n  const dispatch = useDispatch();\n\n  useEffect(()=>{setTables(tables)},[tables])\n  const onSearch = (value)=>{\n    setTables(tables.filter(table=>{\n      return table.name.toLowerCase().includes(value)\n    }))\n  }\n  return (\n    <Page className={classes.root} title=\"Tables\">\n      <Container maxWidth={false}>\n      <Box display=\"flex\" justifyContent=\"flex-end\">\n        <Button onClick={() => dispatch(initiateTableAdd(true))} color=\"primary\" variant=\"contained\">\n          Add Table\n        </Button>\n      </Box>\n      <Box mt={3}>\n        <Card>\n          <CardContent>\n            <Box maxWidth={500}>\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon fontSize=\"small\" color=\"action\">\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  ),\n                }}\n                placeholder=\"Search Table\"\n                variant=\"outlined\"\n                onChange={(event)=>{onSearch(event.target.value.toLowerCase())}}\n              />\n            </Box>\n          </CardContent>\n        </Card>\n      </Box>\n        <Box mt={3}>\n        <PerfectScrollbar>\n          <Grid container spacing={3}>\n            {filteredTables.map(table => (\n              <Grid item key={table.id} lg={4} md={6} xs={12}>\n                <TableCard className={classes.tableCard} table={table} />\n              </Grid>\n            ))}\n          </Grid>\n          </PerfectScrollbar>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TableList;\n","import React, { useEffect } from \"react\";\nimport {\n  Box,\n  Button,\n  Container,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Page from \"../../components/Page\";\nimport TableList from \"./TableList\";\nimport { getTables, hideAlert, initiateTableAdd } from \"../../actions\";\nimport AddTable from \"./AddTable\";\nimport Toast from \"../../modules/toast\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nconst TableView = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const appState = useSelector((state) => state.app);\n  const tableState = useSelector((state) => state.table);\n  const tables = (tableState && tableState.tables) || [];\n  if (appState.alert.show) {\n    Toast({ message: appState.alert.message });\n    dispatch(hideAlert());\n  }\n  if (tableState && tableState.new) {\n    dispatch(getTables());\n  }\n  useEffect(() => {\n    dispatch(getTables());\n  }, []);\n  return (\n    <Page className={classes.root} title=\"Tables\">\n      <Container maxWidth={true}>\n        {tableState && tableState.add ? (\n          <Box mt={3}>\n            <AddTable />\n          </Box>\n        ) : (\n          <Box mt={3}>\n            {tables.length ? (\n              <TableList tables={tables} />\n            ) : (\n              <Typography style={{ margin: \"1rem\" }} variant=\"h4\">\n                No tables added yet please\n                <Button\n                  onClick={() => dispatch(initiateTableAdd(true))}\n                  color=\"primary\"\n                  variant=\"contained\"\n                >\n                  Add Table\n                </Button>\n              </Typography>\n            )}\n          </Box>\n        )}\n      </Container>\n    </Page>\n  );\n};\n\nexport default TableView;\n"],"sourceRoot":""}