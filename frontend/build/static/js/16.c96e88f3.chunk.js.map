{"version":3,"sources":["../node_modules/@material-ui/core/esm/Grid/Grid.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","views/Table/CustomisationList.js","views/Table/ProductCard.js","views/Table/CartItem.js","views/Table/Cart.js","views/TableView/index.js"],"names":["SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","Grid","React","props","ref","_props$alignContent","alignContent","_props$alignItems","alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","display","flexWrap","width","margin","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexBasis","flexGrow","maxWidth","up","generateGrid","name","Card","_props$raised","raised","Paper","elevation","overflow","CardContent","paddingBottom","useStyles","makeStyles","buttonBox","backButton","backgroundColor","colors","red","addButton","green","CustomisationList","customisations","onSelect","onDone","onCancel","selected","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","id","newChecked","push","splice","useEffect","customisation","List","ListItemText","primary","map","labelId","ListItem","role","dense","button","onClick","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemSecondaryAction","price","Box","Button","variant","media","height","border","color","palette","text","fill","transform","transition","customisationButton","fontSize","lineHeight","marginBottom","productName","fontWeight","productCard","boxShadow","focused","productCardContent","description","removeButton","ProductCard","product","dispatch","useDispatch","selectedProducts","useSelector","state","order","selectedCustomisations","useRef","enableCustomisation","setCustomisationStatus","orderedProduct","selectedProduct","find","p","onFinalAdd","current","addProductToOrder","effect","Grow","in","requiredChange","filter","e","image","CardMedia","title","Typography","gutterBottom","Divider","productClone","Object","assign","quantity","onAdd","endIcon","align","style","removeProductFromOrder","onRemove","cartItems","cursor","actionsCard","background","CartItem","noWrap","cartItemPanel","cost","CardActions","emptyCart","emptyCartImage","alignSelf","emptyCartText","cartTitle","cartTitleMobile","heading","typography","pxToRem","secondaryHeading","secondary","orderButton","orderBox","icon","verticalAlign","details","column","helper","borderLeft","divider","link","main","textDecoration","Cart","orderState","tableState","table","cartClicked","setCartClicked","orderedProducts","product1","product2","totalCost","productTotalPrice","customisation1","customisation2","placeOrder","productsInOrder","slice","tableId","selectedTable","products","status","addOrder","isMobile","fullWidth","bottom","position","maxHeight","AccordionSummary","expandIcon","AccordionDetails","index","AccordionActions","disabled","initiateOrderAdd","minHeight","alt","src","sortBy","helperBox","marginTop","TableDashboard","productState","setProducts","searchBy","branchState","branch","topProductsOfBranch","topProducts","productsInState","handleSearch","toLowerCase","includes","getTopProductsOfBranch","marginRight","onChange","event","target","InputProps","startAdornment","placeholder","sort","productsClone","prod1","prod2","sortItems","label"],"mappings":"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","file":"static/js/16.c96e88f3.chunk.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Box, Button } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    display:'flex',\n    flexDirection:'column',\n  },\n  buttonBox:{\n    display:'flex',\n    flexDirection:'row',\n    justifyContent:'space-between'\n  },\n  backButton:{\n    backgroundColor: theme.colors.red,\n  },\n  addButton:{\n    backgroundColor: green[500],\n  }\n}));\n\nexport default function CustomisationList({customisations, onSelect, onDone, onCancel, selected}) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = (value)=> {\n    const currentIndex = checked.indexOf(value.id);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value.id);\n      onSelect(value,'add')\n    } else {\n      newChecked.splice(currentIndex, 1);\n      onSelect(value,'remove')\n    }\n\n    setChecked(newChecked);\n  };\n\n  useEffect(()=>{\n    selected.forEach(customisation =>{\n    if(customisation.id)\n        handleToggle(customisation)\n    })\n  },[selected])\n\n  return (\n    <List className={classes.root}>\n                  <ListItemText  primary={\"Available addons\"} />\n\n      {customisations.map((customisation) => {\n        const labelId = `checkbox-list-label-${customisation.id}`;\n\n        return (\n          <ListItem key={customisation.id} role={undefined} dense button onClick={()=>{handleToggle(customisation)}}>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                checked={checked.indexOf(customisation.id) !== -1}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': labelId }}\n              />\n            </ListItemIcon>\n            <ListItemText primary={customisation.name} />\n            <ListItemSecondaryAction>\n            <ListItemText  primary={customisation.price} />\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n      <Box className={classes.buttonBox}>\n      <Button className={classes.backButton} onClick={()=>{onCancel()}} variant=\"contained\">Go back</Button>\n\n      <Button className={classes.addButton} onClick={()=>{onDone(false)}} variant=\"contained\">Add to cart</Button>\n\n      </Box>\n    </List>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  Typography,\n  CardMedia,\n  makeStyles,\n  Button,\n  Grow,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AttentionSeeker } from \"react-awesome-reveal\";\nimport { addProductToOrder, removeProductFromOrder } from \"../../actions\";\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport CustomisationList from \"./CustomisationList\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    height: 140,\n  },\n  button: {\n    border: \"1px solid black\",\n    color: theme.palette.text.primary,\n    \"&:hover\": {\n      color: \"green\",\n      \"& .MuiButton-endIcon\": {\n        fill: \"black\",\n        transform: \"translateX(3px)\",\n        transition: \"all 0.2s ease\",\n      },\n    },\n  },\n  customisationButton: {\n    fontSize: \".6rem\",\n    width: \"13rem\",\n    lineHeight: \".1rem\",\n    marginBottom: \"1rem\",\n  },\n  productName: {\n    color: theme.palette.text.primary,\n    fontSize: \"1.6rem\",\n    fontWeight: \"750\",\n    lineHeight: \"1.8rem\",\n  },\n  productCard: {\n    marginBottom: \".7rem\",\n    \"&:hover\": {\n      boxShadow:\n        \"0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\",\n    },\n  },\n  focused: {\n    backgroundColor: \"#f1faee\",\n  },\n  productCardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  price: {\n    color: theme.palette.text.primary,\n    fontSize: \"1rem\",\n  },\n  description: {\n    color: theme.palette.text.primary,\n    fontSize: \".7rem\",\n  },\n  addButton: {\n    fill: theme.colors.red,\n  },\n  removeButton: {\n    fill: theme.colors.green,\n  },\n}));\n\nconst ProductCard = ({ product }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const orderState = useSelector((state) => state.order) || {};\n  const selectedProducts = orderState.selectedProducts || [];\n  const selectedCustomisations = useRef([]);\n  const [enableCustomisation, setCustomisationStatus] = useState(false);\n  const orderedProduct = useRef({});\n  let selectedProduct =\n    selectedProducts.find((p) => {\n      return p.id === product.id;\n    }) || {};\n\n  const onAdd = (product) => {\n    const productClone = Object.assign({}, product);\n    productClone.quantity = 1;\n    productClone.price = product.price;\n    orderedProduct.current = productClone;\n    if (productClone.customisation.length) setCustomisationStatus(true);\n    else {\n      onFinalAdd();\n    }\n  };\n\n  const onFinalAdd = () => {\n    orderedProduct.current.customisations = selectedCustomisations.current;\n    dispatch(addProductToOrder(orderedProduct.current));\n    orderedProduct.current = {};\n    selectedCustomisations.current = [];\n    setCustomisationStatus(false);\n  };\n  const onRemove = (product) => {\n    const productClone = Object.assign({}, product);\n    productClone.customisations = [];\n    dispatch(removeProductFromOrder(productClone));\n  };\n  const onCusmisationSelect = (customisation, requiredChange) => {\n    if (requiredChange === \"add\") {\n      selectedCustomisations.current = [\n        ...selectedCustomisations.current,\n        customisation,\n      ];\n    } else if (requiredChange === \"remove\") {\n      selectedCustomisations.current = selectedCustomisations.current.filter(\n        (e) => e.id !== customisation.id\n      );\n    }\n  };\n\n  return (\n    <AttentionSeeker effect=\"pulse\">\n      <Card\n        className={\n          enableCustomisation\n            ? clsx(classes.productCard, classes.focused)\n            : classes.productCard\n        }\n      >\n        <CardContent className={classes.productCardContent}>\n          {enableCustomisation ? (\n            <Grow in={true}>\n            <CustomisationList\n              selected={selectedCustomisations.current}\n              customisations={product.customisation}\n              onDone={onFinalAdd}\n              onCancel={()=>{setCustomisationStatus(false)}}\n              onSelect={onCusmisationSelect}\n            /></Grow>\n          ) : (\n            <Box>\n              {product.image && (\n                <CardMedia\n                  image={product.image}\n                  title={product.name}\n                  className={classes.media}\n                />\n              )}\n              <Typography gutterBottom className={classes.productName}>\n                {product.name}\n              </Typography>\n\n              <Typography className={classes.price}>\n                Rs {product.price}\n              </Typography>\n              <Typography className={classes.description}>\n                {product.description}\n              </Typography>\n            </Box>\n          )}\n        </CardContent>\n        <Divider />\n        <Box p={2}>\n          {!enableCustomisation ? (\n            <Grid container justify=\"space-between\" spacing={2}>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => {\n                  onAdd(product);\n                }}\n                className={classes.button}\n                endIcon={<ControlPointIcon className={classes.removeButton} />}\n              >\n                Add\n              </Button>\n\n              <Typography\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n                style={{ fontSize: \"1rem\" }}\n              >\n                {((selectedProduct && selectedProduct.quantity) || 0) + \" Nos\"}\n              </Typography>\n\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                onClick={() => {\n                  onRemove(product);\n                }}\n                className={classes.button}\n                endIcon={\n                  <IndeterminateCheckBoxIcon className={classes.addButton} />\n                }\n              >\n                Remove\n              </Button>\n            </Grid>\n          ) : null}\n        </Box>\n      </Card>\n    </AttentionSeeker>\n  );\n};\n\nProductCard.propTypes = {\n  product: PropTypes.object.isRequired,\n};\n\nexport default ProductCard;\n","import React from \"react\";\n\nimport {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { addProductToOrder, removeProductFromOrder } from \"../../actions\";\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { Fade } from \"react-awesome-reveal\";\n\nconst useStyles = makeStyles((theme) => ({\n  cartItems: {\n    width: \"5rem\",\n    fontSize: \".7rem\",\n  },\n  addButton: {\n    fill: theme.colors.red,\n    '&:hover':{\n      fill:'black',\n    },\n    cursor: 'pointer'\n  },\n  removeButton: {\n    fill: theme.colors.green,\n    '&:hover':{\n      fill:'black'\n    },\n    cursor: 'pointer'\n  },\n  actionsCard: {\n    display: \"flex\",\n    padding: \".5rem\",\n    background: \"#eae9e92b\",\n  },\n}));\n\nconst CartItem = ({ item }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const onAdd = (product) => {\n    const productClone = Object.assign({}, product);\n    productClone.quantity = 1;\n    productClone.cartItemPanel = true;\n    dispatch(addProductToOrder(productClone));\n  };\n\n  const onRemove = (product) => {\n    dispatch(removeProductFromOrder(product));\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Fade>\n        <Card>\n          <CardContent style={{ padding: \"unset\" }}>\n            <Box p={2}>\n              <Grid container justify=\"space-between\" spacing={1}>\n                <Grid item xs={5}>\n                  <Typography noWrap>{item.name}</Typography>\n                </Grid>\n                <Grid\n                  xs={4}\n                  item\n                >\n                  <Card className={classes.actionsCard}>\n                    <ControlPointIcon\n                      onClick={() => onAdd(item)}\n                      className={classes.addButton}\n                    />\n                    <Typography\n                      className={classes.cartItems}\n                      variant=\"h5\"\n                      align=\"center\"\n                    >\n                      {item.quantity}\n                    </Typography>\n                    <RemoveIcon\n                      onClick={() => onRemove(item)}\n                      className={classes.removeButton}\n                    />\n                  </Card>\n                </Grid>\n                <Grid item xs={3}>\n                  <Typography gutterBottom variant=\"h5\">\n                    $ {item.cost}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Box>\n          </CardContent>\n          <CardActions></CardActions>\n        </Card>\n      </Fade>\n    </Grid>\n  );\n};\nexport default CartItem;\n","import React, { useState } from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport {\n  AccordionActions,\n  AccordionDetails,\n  AccordionSummary,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Fade } from \"react-awesome-reveal\";\n\nimport CartItem from \"./CartItem\";\nimport { addOrder, initiateOrderAdd } from \"../../actions\";\nimport { Plus } from \"react-feather\";\nimport { green, red } from \"@material-ui/core/colors\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  emptyCart: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  emptyCartImage: {\n    width: \"10rem\",\n    alignSelf: \"center\",\n  },\n  emptyCartText: {\n    color: theme.palette.text.primary,\n    fontSize: \"1.2rem\",\n    alignSelf: \"center\",\n    paddingBottom: \"1rem\",\n  },\n  cartTitle: {\n    color: theme.palette.text.primary,\n    fontSize: \"1.4rem\",\n    padding: \"1rem\",\n    fontWeight: 800,\n  },\n  cartTitleMobile: {\n    color: theme.palette.text.primary,\n    fontSize: \"1rem\",\n    padding: \"1rem\",\n    fontWeight: 800,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  orderButton: {\n    backgroundColor: theme.colors.green,\n  },\n  orderBox: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: \"center\",\n  },\n  column: {\n    flexBasis: \"33.33%\",\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const orderState = useSelector((state) => state.order) || {};\n  const tableState = useSelector((state) => state.table) || {};\n  const selectedProducts = orderState.selectedProducts || [];\n  const [cartClicked, setCartClicked] = useState(false);\n  const orderedProducts =\n    selectedProducts\n      .map((product) => product[\"items\"])\n      .reduce((product1, product2) => product1.concat(product2), []) || [];\n  const classes = useStyles();\n  let totalCost = 0;\n  orderedProducts.forEach((product) => {\n    const productTotalPrice =\n      product.customisations.reduce(\n        (customisation1, customisation2) =>\n          customisation1 + customisation2.price,\n        0\n      ) + product.price;\n    if (product.quantity > 1)\n      totalCost = totalCost + productTotalPrice * product.quantity;\n    else {\n      totalCost = totalCost + productTotalPrice;\n    }\n  });\n  const goBack = ()=>{\n    dispatch(initiateOrderAdd(false))\n  }\n  const placeOrder = () => {\n    const order = {};\n    let productsInOrder = orderedProducts.slice(0);\n    productsInOrder = productsInOrder.map((product) => {\n      let productClone = Object.assign({}, product);\n      productClone.customisations = product.customisations.map(\n        (customisation) => {\n          return customisation.id;\n        }\n      );\n      return productClone;\n    });\n    order.tableId = tableState.selectedTable.id;\n    order.products = productsInOrder;\n    order.price = totalCost;\n    order.status = \"ordered\";\n    dispatch(addOrder(order));\n  };\n  const renderCart = () => {\n    if (isMobile) {\n      return (\n        <Grid container justify=\"center\" fullWidth={true}>\n          {cartClicked ? (\n            <Card\n              style={{\n                bottom: \"0\",\n                position: \"fixed\",\n                width: \"90%\",\n                maxHeight: \"70vh\",\n                overflow: \"scroll\",\n              }}\n            >\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon  onClick={() => {\n                  setCartClicked(!cartClicked);\n                }} />}\n              >\n                <Typography className={classes.cartTitleMobile}>\n                  Items in your cart\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails className={classes.details}>\n                <Card\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                  }}\n                >\n                  {orderedProducts.map((item, index) => {\n                    return <CartItem key={item.id + index} item={item} />;\n                  })}\n                </Card>\n              </AccordionDetails>\n              <Divider />\n              <AccordionActions style={{display:'flex', justifyContent:'space-between'}}>\n              <Typography gutterBottom variant=\"h5\">\n                      Total Cost: {totalCost}\n                    </Typography>\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => {\n                        placeOrder();\n                      }}\n                      disabled={!selectedProducts.length}\n                      className={classes.orderButton}\n                      endIcon={<Plus />}\n                    >\n                      Place Order\n                    </Button>\n              </AccordionActions>\n            </Card>\n          ) : (\n            <Box style={{display:'flex', justifyContent:'center',  bottom: \"0\",\n            position: \"fixed\"}}>\n              <Button\n              style={{\n                background: red[500],\n                margin:'1rem'\n              }}\n              variant=\"contained\"\n              onClick={() => {\n                goBack();\n              }}\n            >\n              Go back\n            </Button>\n            <Button\n              style={{\n                background: green[500],\n                margin:'1rem'\n              }}\n              variant=\"contained\"\n              onClick={() => {\n                setCartClicked(!cartClicked);\n              }}\n            >\n              Cart\n            </Button>\n            \n            </Box>\n          )}\n        </Grid>\n      );\n    }\n\n    return (\n      <Box\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          minHeight: \"20vh\",\n          width:'30%'\n        }}\n      >\n          <Typography gutterBottom className={classes.cartTitle} component=\"h2\">\n            Items in your cart\n          </Typography>\n          {selectedProducts.length === 0 && (\n            <Box className={classes.emptyCart}>\n              <img\n                alt=\"empty-cart\"\n                src=\"/images/empty-plate.png\"\n                className={classes.emptyCartImage}\n              />\n              <Typography\n                variant=\"h5\"\n                component=\"h2\"\n                className={classes.emptyCartText}\n              >\n                Uh, oh! your cart looks empty\n              </Typography>\n            </Box>\n          )}\n          {orderedProducts.map((item, index) => {\n            return <CartItem key={item.id + index} item={item} />;\n          })}\n          <Divider />\n          {selectedProducts.length > 0 ? (\n            <Grid item xs={12}>\n              <Fade>\n                <CardContent>\n                  <Box className={classes.orderBox}>\n                    <Typography gutterBottom variant=\"h5\">\n                      Total Cost: {totalCost}\n                    </Typography>\n                    <Button\n                      variant=\"contained\"\n                      onClick={() => {\n                        placeOrder();\n                      }}\n                      disabled={!selectedProducts.length}\n                      className={classes.orderButton}\n                      endIcon={<Plus />}\n                    >\n                      Place Order\n                    </Button>\n                  </Box>\n                </CardContent>\n              </Fade>\n            </Grid>\n          ) : (\n            <div></div>\n          )}\n      </Box>\n    );\n  };\n\n  return renderCart();\n};\nexport default Cart;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  FormControl,\n  Grid,\n  InputAdornment,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  SvgIcon,\n  TextField,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTopProductsOfBranch } from \"../../actions\";\nimport ProductCard from \"../Table/ProductCard\";\nimport Cart from \"../Table/Cart\";\nconst useStyles = makeStyles((theme) => ({\n  sortBy: {\n    width: \"10rem\",\n  },\n  helperBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: \"1rem\",\n    justifyContent: \"space-between\",\n  },\n  button:{\n    width:'9rem'\n  }\n}));\n\nconst TableDashboard = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const productState = useSelector((state) => state.product);\n  const [products, setProducts] = useState([]);\n  const sortBy = useRef('');\n  const searchBy = useRef('');\n\n  const branchState = useSelector((state) => state.branch);\n  const topProductsOfBranch = (branchState && branchState.topProducts) || [];\n  const productsInState = (productState && productState.products) || [];\n  const handleSearch = (value) => {\n    searchBy.current = value;\n    setProducts(\n      productsInState.filter((product) => {\n        return product.name.toLowerCase().includes(value.toLowerCase());\n      })\n    );\n  };\n\n  const sortItems = (sort) => {\n    let productsClone = products.slice(0);\n    sortBy.current = sort;\n   if(productsClone.length >1){\n    if (searchBy.current) {\n      productsClone = productsClone.filter((product) => {\n        return product.name\n          .toLowerCase()\n          .includes(searchBy.current.toLowerCase());\n      });\n    }\n    switch (sort) {\n      case \"ascending\":\n        setProducts(\n          productsClone.sort((prod1, prod2) =>\n            prod1.price - prod2.price\n          )\n        );\n        break;\n      case \"descending\":\n        setProducts(\n          productsClone.sort((prod1, prod2) =>\n            prod2.price - prod1.price\n          )\n        );\n        break;\n      default:\n        break;\n    }\n   }\n   \n  };\n\n  const handleTopProductsClick = () => {\n    setProducts(topProductsOfBranch);\n  };\n\n  useEffect(() => {\n    dispatch(getTopProductsOfBranch());\n  }, []);\n\n  useEffect(() => {\n    handleSearch(\"\");\n   setProducts(productsInState)\n  }, [productsInState]);\n\n  return (\n    <Grid container maxWidth={true}>\n      <Grid style={{ marginRight: \"1rem\" }} item lg={7}>\n        <Box>\n          <Card style={{ marginBottom: \"1rem\" }}>\n            <CardContent>\n              <TextField\n                fullWidth\n                onChange={(event) => {\n                  handleSearch(event.target.value);\n                }}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon fontSize=\"small\" color=\"action\">\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  ),\n                }}\n                placeholder=\"Search for dishes\"\n                variant=\"outlined\"\n                value={searchBy.current}\n              />\n              <Box className={classes.helperBox}>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    handleTopProductsClick();\n                  }}\n                  className={classes.button}\n                >\n                  Top ordered\n                </Button>\n                <FormControl className={classes.sortBy} variant=\"outlined\">\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\n                    Sort by\n                  </InputLabel>\n                  <Select\n                    value={sortBy.current}\n                    onChange={(event) => {\n                      sortItems(event.target.value);\n                    }}\n                    label=\"Sort by\"\n                  >\n                    <MenuItem value=\"\">\n                      <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={\"ascending\"}>Price low to high</MenuItem>\n                    <MenuItem value={\"descending\"}>Price high to low</MenuItem>\n                  </Select>\n                </FormControl>\n              </Box>\n            </CardContent>\n          </Card>\n        </Box>\n        <Grid\n          style={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}\n        >\n          {products.map((p, index) => \n            (\n              <Grid item   key={p.id+index} lg={6} xs={12}>\n                <ProductCard product={p} />\n              </Grid>\n            )\n          )}\n        </Grid>\n      </Grid>\n      <Grid item style={{ marginTop: \"5rem\" }} lg={4}>\n        <Cart />\n      </Grid>\n    </Grid>\n  );\n};\n\nTableDashboard.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default TableDashboard;\n"],"sourceRoot":""}